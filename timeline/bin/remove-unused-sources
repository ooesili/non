#!/bin/sh

# Copyright (C) 2008 Jonathan Moore Liles                                     #
#                                                                             #
# This program is free software; you can redistribute it and/or modify it     #
# under the terms of the GNU General Public License as published by the       #
# Free Software Foundation; either version 2 of the License, or (at your      #
# option) any later version.                                                  #
#                                                                             #
# This program is distributed in the hope that it will be useful, but WITHOUT #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       #
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for   #
# more details.                                                               #
#                                                                             #
# You should have received a copy of the GNU General Public License along     #
# with This program; see the file COPYING.  If not,write to the Free Software #
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  #

## remove-unused-sources
#
# April 2008, Jonathan Moore Liles
#
# Simple script to scan a compacted Non-DAW project and remove all
# unused sources from disk.
#
# USAGE:
#
#     $ remove-unused-sources ~/audio/'The Best Song Ever'
#
# NOTES:
#
#     This script will not ask for comfirmation! It will ruthlessly
#     delete all unused sources! You have been warned.
#

DRY_RUN=
ONLY_COMPACTED=
MOVE=1

fatal ()
{
    echo Error: "$1"
    echo 'Aborting!'
    cleanup
    exit 1
}

cleanup ()
{
    if [ -d "${TEMP}" ]
    then
        rm -f "${TEMP}/all-sources" "${TEMP}/used-sources"
        rmdir "${TEMP}"
    fi
}

set_diff ()
{
    diff --new-line-format '' --old-line-format '%L' --unchanged-line-format '' "$1" "$2"
}

remove_sources ()
{
    local TOTAL=0
    local FILE
    local SIZE
    local PSIZE
    while read FILE
    do

        PSIZE=`stat -c '%s' "${FILE}.peak" 2>/dev/null`
        SIZE=`stat -c '%s' "${FILE}" 2>/dev/null`

        PSIZE=${PSIZE:-0}

        if ! [ -f "${FILE}" ]
        then
            echo "Would remove \"${FILE}\", if it existed."
        else
            if [ "$DRY_RUN" = 1 ]
            then
                echo "Would remove: ${FILE}"
            else
                if [ "$MOVE" = 1 ]
                then
                    echo "Moving unused source \"${FILE}\"..."
                    mv -f ./"${FILE}" ./"${FILE}".peak ../unused-sources
                else
                    echo "Removing unused source \"${FILE}\"..."
                    rm -f ./"${FILE}" ./"${FILE}".peak
                fi
            fi

            TOTAL=$(( $TOTAL + $SIZE + $PSIZE ))
        fi

    done

    echo "...Freeing a total of $(($TOTAL / ( 1024 * 1024 ) ))MB"
}

usage ()
{
    fatal "Usage: $0 [-n] [-c] [-m|-d] path/to/project"
}


while getopts "dmnc" o
do
    case "$o" in
	d) MOVE= ;;
        m) MOVE=1 ;;
        n) DRY_RUN=1 ;;
        c) ONLY_COMPACTED=1 ;;
	\?) usage ;;
        *) echo "$o" && usage ;;
    esac
done

shift $(( $OPTIND - 1 ))
PROJECT="$1"

[ $# -eq 1 ] || usage

cd "$PROJECT" || fatal "No such project"

[ -f history ] && [ -f info ] || fatal "Not a Non-DAW project?"

[ -f .lock ] && fatal "Project appears to be in use"

TEMP=$(mktemp -q -d) || fatal "Cannot create temporary directory"

if [ "$ONLY_COMPACTED" = 1 ]
then
    grep -v '\(^\{\|\}$\)\|create' history && fatal "Not a compacted project"
fi

echo "Scanning \"${PROJECT}\"..."

sed -n 's/^\s*Audio_Region.* :source "\([^"]\+\)".*$/\1/p' history | sort | uniq > "${TEMP}/used-sources"

cd sources || fatal "Can't change to source directory"

[ "$MOVE" = 1 ] && mkdir ../unused-sources 2>/dev/null

ls -1 | grep -v '\.peak$' | sort > "${TEMP}/all-sources"

set_diff "${TEMP}/all-sources" "${TEMP}/used-sources" | remove_sources

cleanup

echo "Done."
